version: '3.8'

services:
  db:
    image: postgres:13.5-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./config/.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "medusa_light", "-h", 'http://db', '-p', '5432', '-U', 'medusa_light_user' ]
      interval: 10s
      timeout: 5s
      retries: 15

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - ./config/.env
    volumes:
      - pgadmin:/root/.pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - "8888:80"
    restart: unless-stopped

  web:
    build:

      context: .
      dockerfile: backend/Dockerfile
    container_name: web

    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/backend/static
    expose:
      - 8000
    env_file:
      - ./config/.env
    depends_on:
      - db

  nginx:
    build: ./config/nginx
    container_name: nginx
    volumes:
      - static_volume:/home/app/web/backend/static
    ports:
      - '80:80'
    depends_on:
      - web
    env_file:
      - ./config/.env



volumes:
  postgres_data:
  static_volume:
  pgadmin:
